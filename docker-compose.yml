# Use root/example as user/password credentials
version: '3.1'

services:
  mongo:
    container_name: joboffers-mongo
    image: mongo:4.0.10
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: myjobofferspassword
      MONGO_INITDB_DATABASE: joboffers
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: myjobofferspassword
      ME_CONFIG_BASICAUTH_USERNAME: mongoexpress
      ME_CONFIG_BASICAUTH_PASSWORD: mymongoexpresspwd
      ME_CONFIG_MONGODB_URL: mongodb://root:myjobofferspassword@joboffers-mongo:27017/

  redis:
    container_name: joboffers-redis
    image: redis
    ports:
      - "6379:6379"
    restart: always

  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      REDIS_HOSTS: local:joboffers-redis:6379
      HTTP_USER: redisuser
      HTTP_PASSWORD: redispwd
    ports:
      - "8082:8081"

  joboffers:
    container_name: joboffers
    build: .
#    image: 739275473286.dkr.ecr.eu-central-1.amazonaws.com/joboffers:latest
    restart: always
    ports:
      - "8000:8000"
    environment:
      MONGO_USER: admin
      MONGO_PASSWORD: myjobofferspwd
      MONGO_HOST: joboffers-mongo
      MONGO_PORT: 27017
      MONGO_DB_NAME: joboffers
      MONGO_AUTH_SOURCE: admin
      REDIS_HOST: joboffers-redis
      REDIS_PORT: 6379
      JWT_SECRET: myhArdTOgUEsSjwtSecrEt